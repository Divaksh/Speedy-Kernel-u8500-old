--- kernel/trace/trace.c
+++ kernel/trace/trace.c
@@ -2524,25 +2521,11 @@
 	return -EINVAL;
 }
 
-/* Some tracers require overwrite to stay enabled */
-int trace_keep_overwrite(struct tracer *tracer, u32 mask, int set)
-{
-	if (tracer->enabled && (mask & TRACE_ITER_OVERWRITE) && !set)
-		return -1;
-
-	return 0;
-}
-
-int set_tracer_flag(unsigned int mask, int enabled)
+static void set_tracer_flags(unsigned int mask, int enabled)
 {
 	/* do nothing if flag is already set */
 	if (!!(trace_flags & mask) == !!enabled)
-		return 0;
-
-	/* Give the tracer a chance to approve the change */
-	if (current_trace->flag_changed)
-		if (current_trace->flag_changed(current_trace, mask, !!enabled))
-			return -EINVAL;
+		return;
 
 	if (enabled)
 		trace_flags |= mask;
@@ -2554,8 +2537,6 @@
 
 	if (mask == TRACE_ITER_OVERWRITE)
 		ring_buffer_change_overwrite(global_trace.buffer, enabled);
-
-	return 0;
 }
 
 static ssize_t
@@ -2565,7 +2546,7 @@
 	char buf[64];
 	char *cmp;
 	int neg = 0;
-	int ret = -ENODEV;
+	int ret;
 	int i;
 
 	if (cnt >= sizeof(buf))
@@ -2582,23 +2563,21 @@
 		cmp += 2;
 	}
 
-	mutex_lock(&trace_types_lock);
-
 	for (i = 0; trace_options[i]; i++) {
 		if (strcmp(cmp, trace_options[i]) == 0) {
-			ret = set_tracer_flag(1 << i, !neg);
+			set_tracer_flags(1 << i, !neg);
 			break;
 		}
 	}
 
 	/* If no option could be set, test the specific tracer options */
-	if (!trace_options[i])
+	if (!trace_options[i]) {
+		mutex_lock(&trace_types_lock);
 		ret = set_tracer_option(current_trace, cmp, neg);
-
-	mutex_unlock(&trace_types_lock);
-
-	if (ret < 0)
-		return ret;
+		mutex_unlock(&trace_types_lock);
+		if (ret)
+			return ret;
+	}
 
 	*ppos += cnt;
 
@@ -2896,9 +2875,6 @@
 		goto out;
 
 	trace_branch_disable();
-
-	current_trace->enabled = false;
-
 	if (current_trace && current_trace->reset)
 		current_trace->reset(tr);
 	if (current_trace && current_trace->use_max_tr) {
@@ -2928,7 +2904,6 @@
 			goto out;
 	}
 
-	current_trace->enabled = true;
 	trace_branch_enable(tr);
  out:
 	mutex_unlock(&trace_types_lock);
@@ -4199,13 +4174,7 @@
 
 	if (val != 0 && val != 1)
 		return -EINVAL;
-
-	mutex_lock(&trace_types_lock);
-	ret = set_tracer_flag(1 << index, val);
-	mutex_unlock(&trace_types_lock);
-
-	if (ret < 0)
-		return ret;
+	set_tracer_flags(1 << index, val);
 
 	*ppos += cnt;
 
